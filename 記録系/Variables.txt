変数とは、名前と共に保存される値(または文字列)を指します。
例) ビルトイン変数の一つに、DESKTOPという名前の変数があり、これを参照するにはvar('DESKTOP')と表記します。この関数はデスクトップまでのパスをString型で返します。
多くの変数が存在するため、Dialogs -> Variablesに変数一覧を用意しています。

NOTE : 幾つかのシステム変数はApp Classのメンバ変数となります。

TouchDesignerで変数にアクセスするためには、var('変数名')エクスプレッション(Python)を使用します。
参照: Td_Module : var().
変数名は大文字と小文字を区別するため、var('EAR')とvar('ear')は異なります。

変数は5種類あります。これらの違いは、保存場所、編集権限に依存します:
・システム環境変数 : TouchDesignerを起動した際にOSから受け取る変数です。これらの値はTouchDesigner内で編集することはできず、Windowsコントロールパネルで編集可能です: Control Panel -> System -> AdvancedSystemSettings か Advanced -> EnvironmentVariables
・ビルトイン変数 : この変数はTouchDesignerに予約された、PI(3.141592)などの変数を指し、ユーザーはどこからでも参照可能ですが、編集はできません。
・ルート変数 : ルート変数は、ユーザーが作成した変数で、ルート階層に保持され、どこからでも使用できます。
・パス変数(現在はインターナルショートカットと呼んでいます (参照: Extensions) : この変数はコンポーネント内のどこからでも使用可能なコンポーネントのパスを取得する変数です。これは主にコンポーネント位置を相対的に表現するために使用します。
・コンポーネント変数 : この変数はユーザーが作成するもので、そのコンポーネント内のどこからでも使用できます。現在ではコンポーネントのエクステンションがプロパティーを保持しているため、Pythonはあまり使用されません。
・オペレーター変数 : この変数はPythonで廃止されました。この変数はオペレーターがもつ特定のメンバ(ローカル)変数です。

Tip: 変数の情報を返す3つのエクスプレッションが存在します。
varexists('変数名') : その変数が存在するかどうかの論理値
vartype('変数名') : 変数の型
varpath('変数名') : 変数の保存先

Tscript:
TScriptに相当するものについては, varexists(), vartype(), varpath(), var()を参照ください.
TouchDesignerの利便性のために、ビルトイン、ルート、オペレーター変数はすべて大文字で表現し、$TEMPERATURE のように表記します. 小文字は主にスクリプト変数として使用されます. 大文字と小文字の混合はその他の変数に $NumStudents のように使用されます.

-- パス変数
参照: Internal Shortcut

TScript:
どのコンポーネントもパス変数というパラメーターを保持しています。
パス変数に'body'を設定した場合、コンポーネント内のどこでもme.var('body')(Python)または$body(TScript)を表記することができ、また、me.var('/project1/character1/body')のようなパス表現も使用できます。
これは階層依存のコンポーネントを作成するのに便利です。

-- コンポーネント変数
コンポーネント変数は全てのコンポーネントのローカル変数として作成でき、そのコンポーネント内でのみ使用できます。
基本的にTScriptで使用されますが、Pythonでも使用可能です。
しかし、Extensionsのプロパティを使用したほうがより柔軟です。

Pythonでは、コンポーネント変数を取得するためにvar('変数名')エクスプレッションを使用します。しかし、代入するのは困難で、時にop('../../local/set_variables')['varname', 1] = value のようになります。
TScriptでは、作成、リスト化、削除の際はcvarコマンドを使用します.
コンポーネント変数はVariables Dialog: Variablesダイアログにコンポーネントをドラッグアンドドロップすると、存在するコンポーネントローカル変数を表示するタブを生成します。
コンポーネント変数はTouchDesignerネットワーク階層によって評価されます。コンポーネント変数が参照された際にその変数が定義されていなかった時、そのコンポーネントの親から変数を探します。
この処理は、変数が見つかるまで、もしくはルート階層'/'に到達するまで行われます。

コンポーネント変数の内部的な挙動:
コンポーネント変数はコンポーネント内のローカルと呼ばれるBase COMP内に蓄積されます。その変数はvariablesという名前のtable DAT内のlocalに定義されています.
このDATはset_variablesというTableDATによって供給されており、コマンド(cvar, rvar)を変数に挿入するためのThatとなる。
これはテーブルの異なる変数同士を結合することを可能にしています。
cvar コマンドはlコンポーネント変数をリスト化、代入、消去を行うことができる.

NOTE: ルート変数は単にルート階層のコンポーネント変数のことを指す。
